#!/bin/bash

# Yellow text
echo -e '\E[33;40m'"\033[1m"

# Be verbose
HERE="$(dirname "$(readlink -f "${0}")")"
echo "$HERE running"
set -x

############################

# Google Chrome
# https://www.chromium.org/administrators/linux-quick-start
# https://www.chromium.org/administrators/policy-list-3
# https://www.chromium.org/administrators/configuring-other-preferences
sudo sed -i -e 's| %U| --password-store=basic about:blank %U|g' /usr/share/applications/google-chrome.desktop

############################

# Is copied into $HOME by
# https://github.com/linuxdeepin/deepin-installer/blob/master/live-config/1070deepin-installer
rm /usr/share/applications/deepin-installer.desktop || true

# Works
rm /usr/share/dbus-1/services/com.deepin.dde.welcome.service || true

# TODO: Allow passwordless login
# sudo usermod -a -G nopasswdlogin $THEUSERTOBECHANGED

# Does not work because too late?
mkdir -p /etc/skel/.config/deepin/deepin-terminal/
cat > /etc/skel/.config/deepin/deepin-terminal/config.conf <<EOF
[general]
theme=hemisu light
EOF

# GConf is obsolete. It is the older GNOME 2.x configuration API and system,
# and has been replaced by DConf/GSettings in newer versions.
# However, some applications still use it.
# GSettings is a GLib implementation of DConf,
# which stores its data in a binary database.

# Works
cat > /usr/share/glib-2.0/schemas/60_site_deepin.gschema.override <<EOF
[com.deepin.dde.sound-effect]
enabled=false

[com.deepin.dde.appearance]
cursor-theme='Adwaita'

[com.deepin.dde.power]
sleep-lock=false

[com.deepin.dde.appearance]
font-size=9.6999998092651367

[com.deepin.xsettings]
gtk-font-name='FreeSans 9.699999809265137'
EOF

sudo glib-compile-schemas /usr/share/glib-2.0/schemas/

############################


echo "1"

# Mount first FAT partition that is mounted read-write
# Here the first ISO is loop-mounted into the system
FILE=$(losetup -a | grep iso | head -n 1 | cut -d "(" -f 2 | cut -d ")" -f 1)
# The mount point portion of the path to the ISO
ISOHOST=$(df -P $FILE | awk 'END{print $NF}')

mount "${ISOHOST}" -o remount,rw
mkdir -p  /isodevice/ # This is where Ubuntu has it
sudo mount -o bind "${ISOHOST}" /isodevice/ # This way we have all systems also have it where Ubuntu has it

try() {
  if [ -e "$1" ] ; then
   $@
  else
    echo "* $(basename $1) not installed"
  fi
}

echo "2"
# XFCE
mkdir -p /usr/share/xfwm4/
cat >> /usr/share/xfwm4/defaults <<EOF
DisableTouchpadWhileTyping=true
DisableTouchpadDuration=0.100000
lock-screen-suspend-hibernate=false
EOF

# Fedora; based on
# http://anderson.the-silvas.com/2014/02/14/fedora-20-on-a-macbook-pro-13-late-2013-retina-display/
if [ -e /usr/libexec/gsd-backlight-helper ] ; then
  try /usr/libexec/gsd-backlight-helper --set-brightness 4
  try rfkill block bluetooth # TODO: Disable Bluetooth
  echo 50 > /sys/class/leds/smc::kbd_backlight/brightness
  echo '1500' > '/proc/sys/vm/dirty_writeback_centisecs'
  echo 'min_power' > '/sys/class/scsi_host/host0/link_power_management_policy'
  echo '1' > '/sys/module/snd_hda_intel/parameters/power_save'
  echo '0' > '/proc/sys/kernel/nmi_watchdog'
  for DEVICE in $(find /sys/bus/pci/devices/*) ; do
    echo "auto" > $DEVICE/power/control
  done
fi

# Configure dconf
# Obtained with dconf watch /
# It seems to need [org.gnome.desktop.peripherals.touchpad] for Ubuntu 18.04 whereas
# it seems to need [org.gnome.settings-daemon.peripherals.touchpad] for earlier versions
# why do they keep changing stuff around like that; annoying!

echo "3"
cat > /usr/share/glib-2.0/schemas/60_site.gschema.override <<EOF
[org.gnome.shell.extensions.dash-to-dock]
click-action='minimize'

[com.canonical.Unity.Launcher]
favorites=['application://gedit.desktop', 'application://gnome-terminal.desktop', 'application://nautilus.desktop', 'application://firefox.desktop', 'application://libreoffice-writer.desktop', 'application://libreoffice-calc.desktop', 'application://libreoffice-impress.desktop', 'application://ubuntu-software-center.desktop', 'application://unity-control-center.desktop', 'unity://running-apps', 'unity://expo-icon', 'unity://devices']

[org.compiz.profiles.unity.plugins.unityshell]
launcher-capture-mouse=false

[org.gnome.settings-daemon.peripherals.touchpad]
speed=1.0
tap-to-click=true
natural-scroll=false
left-handed='mouse'
scroll-method='two-finger-scrolling'
motion-acceleration=8.1
horiz-scroll-enabled=true
disable-while-typing=true
motion-threshold=2
touchpad-enabled=true

[org.gnome.desktop.peripherals.touchpad]
speed=1.0
tap-to-click=true
natural-scroll=false
left-handed='mouse'
scroll-method='two-finger-scrolling'
motion-acceleration=8.1
horiz-scroll-enabled=true
disable-while-typing=true
motion-threshold=2
touchpad-enabled=true

[com.canonical.indicator.datetime]
timezone-name='Europe/Berlin Berlin'
EOF

# Deepin
cat > /usr/share/glib-2.0/schemas/60_site_deepin.gschema.override <<EOF
[com.deepin.dde.sound-effect]
enabled=false

[com.deepin.dde.appearance]
cursor-theme='Adwaita'

[com.deepin.dde.power]
sleep-lock=false
EOF

sudo glib-compile-schemas /usr/share/glib-2.0/schemas/

# The following is run whenever a shell (terminal window) is opened by each user
cat > /etc/profile.d/customize.sh <<\EOF
#!/bin/bash
if [ $(which dconf) ] ; then
  CUSTOMLANG=$(echo $LANG | cut -d _ -f 1)
  dconf write /org/gnome/settings-daemon/peripherals/touchpad/disable-while-typing true # Ubuntu
  dconf write /org/gnome/settings-daemon/peripherals/touchpad/motion-acceleration 10.0 # Ubuntu
  dconf write /org/gnome/settings-daemon/peripherals/touchpad/motion-threshold 1 # Ubuntu
  dconf write /org/gnome/desktop/peripherals/touchpad/speed 1.0 # Fedora
  dconf write /org/gnome/desktop/peripherals/touchpad/tap-to-click true # Fedora
  # dconf write /org/gnome/desktop/input-sources/sources "[('xkb', '$CUSTOMLANG')]"
  dconf write /org/gnome/shell/favorite-apps "['firefox.desktop', 'org.gnome.Nautilus.desktop', 'org.gnome.gedit.desktop', 'org.gnome.Terminal.desktop']"
  # Enable certain GNOME Extensions
  # dconf write /org/gnome/shell/enabled-extensions "['places-menu@gnome-shell-extensions.gcampax.github.com', 'launch-new-instance@gnome-shell-extensions.gcampax.github.com', 'dash-to-dock@micxgx.gmail.com', 'apps-menu@gnome-shell-extensions.gcampax.github.com', 'alternate-tab@gnome-shell-extensions.gcampax.github.com']"
  # dconf write /org/gnome/shell/extensions/dash-to-dock/dock-position "'BOTTOM'"
  # Fix Ubuntu multiscreen stupidity (sticky edges, multiple docks)
  dconf write /org/compiz/profiles/unity/plugins/unityshell/launcher-capture-mouse false
  dconf write /org/compiz/profiles/unity/plugins/unityshell/num-launchers 1
fi
HISTTIMEFORMAT="$(echo -e '\r\e[K')"
EOF
chmod a+x /etc/profile.d/customize.sh

# Fix Retina display (works on Ubuntu), TODO: Make this run only on Retina devices, and convert to the format above
# dconf write /org/gnome/desktop/interface/cursor-size 36
# dconf write /org/gnome/desktop/interface/text-scaling-factor 1.5
# dconf write /org/compiz/profiles/unity/plugins/expo/x-offset 97
# dconf write /org/compiz/profiles/unity/plugins/unityshell/launcher-capture-mouse false
# dconf write /org/compiz/profiles/unity/plugins/unityshell/num-launchers 1
# Alternatively, could set the resolution to non-Retina
# dconf write /org/compiz/profiles/unity/plugins/core/outputs ['1440x900+0+0']

echo "4"
# Disable crash reporter
if [ -e /etc/default/apport ] ; then
  sed -i -e 's|enabled=1|enabled=0|g' /etc/default/apport
fi

# No restricted driver nagging in Ubuntu
if [ -e /etc/xdg/autostart/jockey-gtk.desktop ] ; then
  echo "Hidden=true" >> /etc/xdg/autostart/jockey-gtk.desktop
fi

# Remove dist-upgrade nag screen
if [ -e /usr/lib/update-manager/check-new-release-gtk ] ; then
  mv /usr/lib/update-manager/check-new-release-gtk /usr/lib/update-manager/check-new-release-gtk.disabled
fi

# Disable GNOME Login Sound
if [ -e /usr/share/gnome/autostart/libcanberra-login-sound.desktop ] ; then
  echo "X-GNOME-Autostart-enabled=false" > /usr/share/gnome/autostart/libcanberra-login-sound.desktop
fi

# Disable SUSEgreeter
if [ -e /etc/xdg/autostart/SUSEgreeter.desktop ] ; then
  rm /etc/xdg/autostart/SUSEgreeter.desktop
fi

# Deepin; is copied into $HOME by
# https://github.com/linuxdeepin/deepin-installer/blob/master/live-config/1070deepin-installer
rm /usr/share/applications/deepin-installer.desktop || true
rm /usr/share/dbus-1/services/com.deepin.dde.welcome.service || true

# Disable autostarts, e.g., Antergos cnchi and Ubuntu MATE ubuntu-mate-welcome
rm /etc/skel/.config/autostart/*.desktop 2>/dev/null || true

# Remove gnome-getting-started
apt-get -y remove --auto-remove gnome-getting-started-docs || true

# Remove crap from desktop
find /home/ -wholename "*Desktop/*.desktop" -exec rm {} \;

# FN keys on Apple keyboard
cat > /etc/modprobe.d/hid_apple.conf <<EOF
options hid_apple fnmode=2
EOF
rmmod hid_apple 2>/dev/null && modprobe hid_apple

# Dualhead on, works for NVidia on Ubuntu 11.04 at least - no longer needed in 14.04
# cat > /etc/X11/Xsession.d/80dualhead <<\EOF
# xrandr --output VGA-1 --right-of DVI-I-1
# EOF

echo "5"
# Add universe
if [ -e /etc/apt/sources.list ] ; then
  sed -i -e 's|main restricted|main universe multiverse restricted|g' /etc/apt/sources.list
fi

# Disable apt translations
rm /var/lib/apt/lists/*_i18n_*
cat >> /etc/apt/apt.conf <<EOF
Acquire {
           Languages "none";
};
EOF

echo "6"
# Fix major KDE4 annoyances. See
# http://techbase.kde.org/KDE_System_Administration/PlasmaDesktopScripting#Examples
# On non-Kubuntu systems, the following locations might be relevant as well:
# /usr/share/kde4/apps/plasma-desktop/init/00-defaultLayout.js
# /usr/share/kde4/apps/plasma/layout-templates/org.kde.plasma-desktop.defaultPanel/contents/layout.js
KDE4EVILFILE="/usr/share/kubuntu-default-settings/kde4-profile/default/share/apps/plasma-desktop/init/00-defaultLayout.js"
ls "${KDE4EVILFILE}" 2>/dev/null && (
# Proper K menu
sed -i -e 's|launcher|simplelauncher|g' "${KDE4EVILFILE}"
# Proper icons on desktop
sed -i -e 's|new Activity(\"desktop\")|new Activity(\"folderview\")|g' "${KDE4EVILFILE}"
# No more box around the desktop icons
sed -i -e 's|folderview = activity.addWidget(\"folderview\");||g' "${KDE4EVILFILE}"
sed -i -e 's|folderview.writeConfig(\"url\", \"desktop:/\");||g' "${KDE4EVILFILE}"
# No more crap
sed -i -e 's|activity.addWidget("twitter");||g' "${KDE4EVILFILE}"
# No more sounds
mkdir -p "/etc/skel/.kde/share/config/"
cat > "/etc/skel/.kde/share/config/knotifyrc" <<\EOF
[Sounds]
No sound=true
Use external player=false
Volume=100
EOF
)

# Configure Xfce desktop
mkdir -p /etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml/
cat > /etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-desktop.xml <<\EOF
<?xml version="1.0" encoding="UTF-8"?>

<channel name="xfce4-desktop" version="1.0">
  <property name="desktop-icons" type="empty">
    <property name="style" type="empty"/>
    <property name="file-icons" type="empty">
      <property name="show-home" type="empty"/>
      <property name="show-filesystem" type="empty"/>
      <property name="show-removable" type="empty"/>
      <property name="show-trash" type="empty"/>
    </property>
    <property name="icon-size" type="empty"/>
    <property name="tooltip-size" type="empty"/>
  </property>
  <property name="backdrop" type="empty">
    <property name="screen0" type="empty">
      <property name="monitor0" type="empty">
        <property name="image-path" type="empty"/>
        <property name="image-style" type="empty"/>
        <property name="image-show" type="empty"/>
        <property name="workspace0" type="empty">
          <property name="color-style" type="int" value="0"/>
          <property name="image-style" type="int" value="0"/>
          <property name="color1" type="array">
            <value type="uint" value="29596"/>
            <value type="uint" value="29596"/>
            <value type="uint" value="29596"/>
            <value type="uint" value="65535"/>
          </property>
        </property>
      </property>
      <property name="monitor1" type="empty">
        <property name="image-path" type="empty"/>
        <property name="image-style" type="empty"/>
        <property name="image-show" type="empty"/>
      </property>
    </property>
  </property>
  <property name="last" type="empty">
    <property name="window-width" type="int" value="584"/>
    <property name="window-height" type="int" value="526"/>
  </property>
</channel>
EOF

# Do not ask about securing the keyring with a password; does this work?
cat > /etc/skel/.local/share/keyrings/Default_keyring.keyring <<\EOF
[keyring]
display-name=Default keyring
ctime=1526038479
mtime=0
lock-on-idle=false
lock-after=false
EOF

echo "7"
# Revert stupidity that prevents running executable files from FAT disks
# https://forum.kde.org/viewtopic.php?f=225&t=108693
# https://cgit.freedesktop.org/udisks/commit/?id=7e7ec1abca069e9443f8eed49acec4ea32589d0c
# https://bugzilla.redhat.com/show_bug.cgi?id=646673
# https://ubuntuforums.org/showthread.php?t=1665289
# https://bugs.launchpad.net/ubuntu/+source/udisks/+bug/663815
if [ -e /usr/lib/udisks/udisks-daemon ] ; then
  sed -i -e 's|showexec|\x00\x00\x00\x00\x00\x00\x00\x00|g' /usr/lib/udisks/udisks-daemon
fi
if [ -e /usr/lib/udisks2/udisksd ] ; then
  sed -i -e 's|showexec|\x00\x00\x00\x00\x00\x00\x00\x00|g' /usr/lib/udisks2/udisksd # Ubuntu 12.10
fi
if [ -e /usr/libexec/udisks2/udisksd ] ; then
  sed -i -e 's|showexec|\x00\x00\x00\x00\x00\x00\x00\x00|g' /usr/libexec/udisks2/udisksd # Fedora 23
fi

# Set the correct timezone; TODO: Move this to the localization and make it dependent on cmdline
if [ -e /usr/share/zoneinfo/Europe/Berlin ] ; then
  ln -sf /usr/share/zoneinfo/Europe/Berlin /etc/localtime
fi

# Do not use UTC on Ubuntu
if [ -e /etc/default/rcS ] ; then
  sed -i -e 's|UTC=yes|UTC=no|g' /etc/default/rcS
fi

# Mount, link, and run .ExtensionImage files
ARCH=$(uname -p)
ARCH=$(arch) # for Debian
EXTENSIONS=$(find $HERE/$ARCH/ -type f -name *ExtensionImage)
EXTDIR=/var/run/Extensions
mkdir -p "${EXTDIR}"
for EXTENSION in $EXTENSIONS ; do
  SHORT=$(basename "${EXTENSION}")
  mkdir -p "${EXTDIR}"/"${SHORT}"
  mount -o loop,ro "${EXTENSION}" "${EXTDIR}"/"${SHORT}"
  cp -rsf "${EXTDIR}"/"${SHORT}"/* /
  cp -rsf "${EXTDIR}"/"${SHORT}"/lib/* /lib ### FIXME: Workaround for Fedora where lib is a link
  if [ -x "${EXTDIR}"/"${SHORT}"/ExtensionRun ] ; then
     "${EXTDIR}"/"${SHORT}"/ExtensionRun
  fi
done

echo "8"
# Configure dual head setup
mkdir -p /etc/gnome-settings-daemon/xrandr/
cat > /etc/gnome-settings-daemon/xrandr/monitors.xml <<\EOF
cat ./.config/monitors.xml
<monitors version="1">
  <configuration>
    <clone>no</clone>
    <output name="DVI-I-1">
      <vendor>BNQ</vendor>
      <product>BenQ GW2260</product>
      <serial>X3D02624019</serial>
      <width>1080</width>
      <height>1920</height>
      <rate>60</rate>
      <x>0</x>
      <y>0</y>
      <rotation>right</rotation>
      <reflect_x>no</reflect_x>
      <reflect_y>no</reflect_y>
      <primary>yes</primary>
      <presentation>no</presentation>
    </output>
    <output name="VGA-1">
      <vendor>BNQ</vendor>
      <product>BenQ GW2260</product>
      <serial>X3D03548019</serial>
      <width>1920</width>
      <height>1080</height>
      <rate>60</rate>
      <x>1080</x>
      <y>496</y>
      <rotation>normal</rotation>
      <reflect_x>no</reflect_x>
      <reflect_y>no</reflect_y>
      <primary>no</primary>
      <presentation>no</presentation>
    </output>
  </configuration>
</monitors>
EOF

echo "9"
# Continue as usual
tput sgr0
if [ -s /usr/lib/systemd/systemd ] ; then
  if [ -s /etc/SuSE-release ] ; then
    # for OpenSUSE, works. CentOS 7 does not like this (stalls boot)
    exec /usr/lib/systemd/systemd
  fi
fi

echo "10"
cat > /.hidden <<EOF
bin
boot
dev
etc
lib
lib64
media
mnt
opt
proc
run
sbin
snap
srv
sys
tmp
usr
var
initrd.img
initrd.img.old
vmlinuz
vmlinuz.old
rofs
cdrom
ExtensionRun
LGPL
EOF

rm /usr/share/pixmaps/fedora_whitelogo.svg 2>/dev/null # No fedora logo in the bottom right corner

# Downloading debs without asking? On a live system? Give me a break!
# xubuntu-16.04.1-desktop-amd64.iso has this
rm -f /usr/bin/unattended-upgrade 2>/dev/null
rm -f /etc/apt/apt.conf.d/20auto-upgrades 2>/dev/null

# KDE Wallet is only annoying on a Live system
rm -rf /usr/bin/kwallet*  2>/dev/null || true

# Package ubuntu-web-launchers
rm -rf /usr/share/applications/com.canonical.launcher.amazon.desktop 2>/dev/null || true
rm -rf /usr/share/applications/ubuntu-amazon-default.desktop 2>/dev/null || true
rm -rf /usr/share/ubuntu-web-launchers 2>/dev/null || true

#############################################
#
# Firefox
#
#############################################

# /usr/lib/firefox/defaults/pref/vendor-gre.js is the location on Ubuntu
# Check user's settings in:
# ./.mozilla/firefox/*.default/prefs.js

mkdir -p /usr/lib/firefox/defaults/pref # Should not hurt

cat > /usr/lib/firefox/defaults/pref/00_admin-prefs.js <<\EOF
// Any comment. You must start the file with a single-line comment!
// https://developer.mozilla.org/en-US/Firefox/Enterprise_deployment_before_60
pref("general.config.filename", "mozilla.cfg");
pref("general.config.obscure_value", 0);
EOF

cat >> /usr/lib/firefox/mozilla.cfg <<\EOF
// Any comment. You must start the file with a comment!
// https://developer.mozilla.org/en-US/Firefox/Enterprise_deployment_before_60

// Disable updater
lockPref("app.update.enabled", false);
// make absolutely sure it is really off
lockPref("app.update.auto", false);
lockPref("app.update.mode", 0);
lockPref("app.update.service.enabled", false);

// Disable Add-ons compatibility checking
clearPref("extensions.lastAppVersion"); 

// Don't show 'know your rights' on first run
pref("browser.rights.3.shown", true);

// Don't show WhatsNew on first run after every update
pref("browser.startup.homepage_override.mstone","ignore");

// Set default homepage - users can change
// Requires a complex preference
defaultPref("browser.startup.homepage","data:text/plain,browser.startup.homepage=about:blank");

// Disable the internal PDF viewer
pref("pdfjs.disabled", true);

// Disable the flash to javascript converter
pref("shumway.disabled", true);

// Don't ask to install the Flash plugin
pref("plugins.notifyMissingFlash", false);

//Disable plugin checking
lockPref("plugins.hide_infobar_for_outdated_plugin", true);
clearPref("plugins.update.url");

// Disable health reporter
lockPref("datareporting.healthreport.service.enabled", false);

// Disable all data upload (Telemetry and FHR)
lockPref("datareporting.policy.dataSubmissionEnabled", false);

// Disable crash reporter
lockPref("toolkit.crashreporter.enabled", false);
Components.classes["@mozilla.org/toolkit/crash-reporter;1"].getService(Components.interfaces.nsICrashReporter).submitReports = false; 

// Other
pref("browser.laterrun.enabled", false);
pref("browser.onboarding.enabled", false);
pref("browser.startup.firstrunSkipsHomepage", false);
pref("browser.startup.homepage", "about:blank");
pref("datareporting.healthreport.uploadEnabled", false);
pref("privacy.donottrackheader.enabled", true);
pref("privacy.resistFingerprinting", true);
pref("privacy.trackingprotection.enabled", true);
pref("privacy.trackingprotection.introCount", 50);
pref("signon.rememberSignons", false);
pref("toolkit.telemetry.newProfilePing.enabled", false);
pref("toolkit.telemetry.updatePing.enabled", false);
EOF

# openSUSE has it in /usr/lib64/firefox/

if [ -e /usr/lib64/firefox/ ]  ; then
  cp -Rsf /usr/lib/firefox/* /usr/lib64/firefox/
fi

#############################################
#
# AppImage handling
#
#############################################

cat > /tmp/executable.desktop <<\EOF
[Desktop Entry]
Version=1.0
Name=executable
Exec=bash -c "FILE=%f;chmod a+x \\$FILE;exec \\$FILE"
Icon=utilities-terminal
Terminal=false
Type=Application
Categories=Application;
MimeType=application/x-executable;
NoDisplay=true
EOF
sudo desktop-file-install /tmp/executable.desktop
rm /tmp/executable.desktop

sudo update-desktop-database /usr/share/applications/

#############################################

grep -r init= /proc/cmdline && exec /sbin/init
