#!/bin/bash

# To test:
# systemctl --user status appimaged
# systemctl --user enable appimaged
# systemctl --user start appimaged

set -e

HERE="$(dirname "$(readlink -f "${0}")")"

if [ -e /usr/bin/apt-get ] ; then
  which mksquashfs || apt-get -y install squashfs-tools
  which wget || apt-get -y install wget
  # which dpkg || apt-get -y install dpkg
fi

if [ -e /usr/bin/yum ] ; then
  which mksquashfs || yum -y install squashfs-tools
  which wget || yum -y install wget
  # which dpkg || yum -y install dpkg
fi

mkdir -p /tmp/appimaged_x86_64
cd /tmp/appimaged_x86_64

# wget -c http://ftp.us.debian.org/debian/pool/main/i/inotify-tools/libinotifytools0_3.14-1_amd64.deb
# dpkg -x libinotifytools*.deb .
# rm *.deb

# The following directories must exist when the session starts, otherwise the user must log out and in
# for appimaged to work properly. This is NOT an appimaged bug. Send a pull request if you can fix this.
# It looks like it is too late here to populate skel, hence this DOES NOT WORK
mkdir -p etc/skel/.local/share/icons/hicolor/{16x16,22x22,24x24,32x32,36x36,48x48,64x64,72x72,96x96,128x128,192x192,256x256,512x512}/apps/
mkdir -p etc/skel/.local/share/icons/hicolor/scalable/apps/
find etc/skel/.local/share/icons -type d -name apps -exec echo echo \"This directory must exist before the session starts in order to work\" \> {}/.note \; > commands
bash -x commands
rm commands
mkdir -p etc/skel/.local/share/applications/appimagekit
echo "This directory must exist before the session starts in order to work" >> etc/skel/.local/share/applications/appimagekit/.note
mkdir -p etc/skel/.local/share/mime/packages/
echo "This directory must exist before the session starts in order to work" >> etc/skel/.local/share/mime/packages/.note

mkdir -p usr/bin

# Get the ID of the last successful build on Travis CI
# DLD=$(wget -q https://github.com/AppImage/appimaged/releases -O - | grep "appimaged_.*64*.deb" | head -n 1 | cut -d '"' -f 2)
# wget -c "https://github.com/$DLD"

# artifactory for libappimage-0.2 based appimaged builds
LINK=$(wget -q "https://artifacts.assassinate-you.net/artifactory/appimaged/" -O - | grep "travis-" | cut -d '"' -f 2 | sort -Vr | head -n 1)
URL=$(wget -q "https://artifacts.assassinate-you.net/artifactory/appimaged/$LINK/" -O - | grep "amd64.deb" | cut -d '"' -f 2 | head -n 1)
wget -c "https://artifacts.assassinate-you.net/artifactory/appimaged/$LINK/$URL"

dpkg -x appimaged_*.deb . && rm appimaged_*.deb
# Without those, the service doesn't automatically launch on boot
cat > ExtensionRun <<\EOF
#!/bin/sh

mkdir -p /usr/lib/systemd/user/
cat > /usr/lib/systemd/user/appimaged.service<<\EOxxF
[Unit]
Description=AppImage daemon
After=basic.target

[Service]
ExecStart=/usr/bin/appimaged
Restart=always
RestartSec=5s
StartLimitInterval=0

[Install]
WantedBy=graphical.target
EOxxF

# Enable per-user launchd unit for all users in a way that users can disable it
systemctl --global enable appimaged # does not seem to work

# Enable per-user launchd unit for all users, does not seem to work either
mkdir -p /usr/lib/systemd/user/graphical.target.wants/
( cd /usr/lib/systemd/user/graphical.target.wants/ ; ln -s ../appimaged.service . )

# Really desperate now
mkdir -p /home/me/.config/systemd/user/graphical.target.wants/
ln -s /usr/lib/systemd/user/appimaged.service /home/me/.config/systemd/user/graphical.target.wants/appimaged.service
chown -R me /home/me/
EOF

chmod a+x ExtensionRun

# Since all of the above does not work, I am using an autostart file
# but it would nice if systemd could do this on its own
mkdir -p etc/xdg/autostart/
cat > etc/xdg/autostart/appimaged.desktop <<EOF
[Desktop Entry]
Name=appimaged
Exec=systemctl --user start appimaged
Terminal=false
Type=Application
NoDisplay=true
EOF

# Install AppImageUpdate to usr/local/bin
APP=AppImageUpdate
URL=$(wget -q https://api.github.com/repos/AppImage/AppImageUpdate/releases -O - | grep browser_download_url | grep -e 'AppImageUpdate-.*x86_64.AppImage\"' | head -n 1 | cut -d '"' -f 4)
wget -c "$URL" -O "$APP"
chmod a+x "$APP"
mkdir -p usr/local/bin/
sudo mv "$APP" usr/local/bin/

mkdir -p "${HERE}/../customize/x86_64/"
mksquashfs . "${HERE}/../customize/x86_64/appimaged.ExtensionImage" -noappend
cd -
